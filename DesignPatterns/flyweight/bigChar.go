package main

import (
	"fmt"
	"io/ioutil"
	"os"
)

const errData string = `????????????????
????????????????
????????????????
????????????????
????????????????
????????????????
????????????????
????????????????
`

type bigChar struct {
	charname byte
	fontData string
}

func newBigChar(name byte) *bigChar {
	bc := &bigChar{
		charname: name,
	}
	file := fmt.Sprintf("big%c.txt", name)
	if data, err := read(file); err != nil {
		bc.fontData = errData
	} else {
		bc.fontData = data
	}
	return bc
}

func read(path string) (string, error) {
	fi, err := os.Open(path)
	if err != nil {
		return "", err
	}
	defer fi.Close()
	fd, err := ioutil.ReadAll(fi)
	return string(fd), nil
}

func (b *bigChar) String() string {
	return b.fontData
}
